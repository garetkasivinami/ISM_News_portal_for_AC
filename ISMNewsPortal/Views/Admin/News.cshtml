@model ISMNewsPortal.Models.NewsPostAdminCollection

@{
    Layout = "~/Views/Shared/_Admin.cshtml";
}
<h1>News list</h1>
@Html.ActionLink("Create news", "CreateNews", "Admin", new { }, new { @class = "btn btn-outline-primary" })
<hr />

<nav class="navbar navbar-expand-sm navbar-light bg-light">
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item dropdown drop-flex">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Filter by...
                </a>
                <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                    @Html.ActionLink("Today", "News", "Admin", new
                    {
                        @Filter = "today",
                        @SortType = Model.SortType,
                        @TypeSearch = Model.TypeSearch,
                        @Search = Model.Search
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Yesterday", "News", "Admin", new
                    {
                        @Filter = "yesterday",
                        @SortType = Model.SortType,
                        @TypeSearch = Model.TypeSearch,
                        @Search = Model.Search
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("This week", "News", "Admin", new
                    {
                        @Filter = "week",
                        @SortType = Model.SortType,
                        @TypeSearch = Model.TypeSearch,
                        @Search = Model.Search
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("All", "News", "Admin", new
                    {
                        @SortType = Model.SortType,
                        @TypeSearch = Model.TypeSearch,
                        @Search = Model.Search
               }, new { @class = "dropdown-item" })
                </div>
            </li>
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Sort by...
                </a>
                <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                    @Html.ActionLink("Id", "News", "Admin", new
                    {
                        @SortType = "id",
                        @Filter = Model.Filter,
                        @TypeSearch = Model.TypeSearch,
                        @Search = Model.Search
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Name", "News", "Admin", new
                    {
                        @SortType = "name",
                        @Filter = Model.Filter,
                        @TypeSearch = Model.TypeSearch,
                        @Search = Model.Search
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Description", "News", "Admin", new
                    {
                        @SortType = "description",
                        @Filter = Model.Filter,
                        @TypeSearch = Model.TypeSearch,
                        @Search = Model.Search
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Date", "News", "Admin", new
                    {
                        @Filter = Model.Filter,
                        @TypeSearch = Model.TypeSearch,
                        @Search = Model.Search
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Edit date", "News", "Admin", new
                    {
                        @SortType = "editDate",
                        @Filter = Model.Filter,
                        @TypeSearch = Model.TypeSearch,
                        @Search = Model.Search
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Author", "News", "Admin", new
                    {
                        @SortType = "author",
                        @Filter = Model.Filter,
                        @TypeSearch = Model.TypeSearch,
                        @Search = Model.Search
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Publication date", "News", "Admin", new
                    {
                        @SortType = "publishDate",
                        @Filter = Model.Filter,
                        @TypeSearch = Model.TypeSearch,
                        @Search = Model.Search
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Visibility", "News", "Admin", new
                    {
                        @SortType = "visibility",
                        @Filter = Model.Filter,
                        @TypeSearch = Model.TypeSearch,
                        @Search = Model.Search
               }, new { @class = "dropdown-item" })
                </div>
            </li>
        </ul>
        @using (Html.BeginForm("News", "Admin", FormMethod.Get, new { @class = "form-inline my-2 my-lg-0" }))
        {
            @Html.Hidden("SortType", Model.SortType);
            @Html.Hidden("Filter", Model.Filter);
            @Html.Hidden("Page", Model.Page);
            <p>Search by....</p>
            <select name="TypeSearch">
                <option selected value="name">Name</option>
                <option value="description">Description</option>
            </select>
            <input class="form-control mr-sm-2" type="search" name="Search" placeholder="Search" aria-label="Search" value="@Model.Search">
            <button class="btn btn-outline-dark my-2 my-sm-0" type="submit">Search</button>
        }
    </div>
</nav>

@if (Model.NewsPostAdminViews.Any())
{
    foreach (ISMNewsPortal.Models.NewsPostAdminView newsPost in Model.NewsPostAdminViews)
    {
        <div class="card news-item">
            <div class="card-header">
                <ul class="list-group list-group-horizontal">
                    <li class="list-group-item"><strong>ID: @newsPost.Id</strong></li>
                    <li class="list-group-item">Author: @newsPost.AuthorName</li>
                    <li class="list-group-item">Author id: @newsPost.AuthorId</li>
                    <li class="list-group-item">Create date: @newsPost.CreatedDate</li>
                    <li class="list-group-item">Publication date: @newsPost.PublicationDate</li>
                    <li class="list-group-item">Is visible: @newsPost.IsVisible</li>
                </ul>
            </div>
            <div class="card-body">
                @if (newsPost.EditDate != null)
                {
                    <p>Last edit date: @newsPost.EditDate</p>
                }
                @Html.Partial("~/Views/News/_NewsSimplifyPartial.cshtml", newsPost)
            </div>
            <div class="card-footer">
                <div class="btn-group" role="group">
                    @Html.ActionLink("Edit", "EditNews", "Admin", new { @id = newsPost.Id }, new { @class = "btn btn-outline-secondary btn-sm" })
                    @Html.ActionLink("Details", "Details", "News", new { @id = newsPost.Id }, new { @class = "btn btn-outline-secondary btn-sm" })
                    @Html.ActionLink("Delete", "DeleteNewsPostRequest", "Admin", new { @id = newsPost.Id }, new { @class = "btn btn-outline-secondary btn-sm doubleClickLink" })
                </div>
            </div>
        </div>

    }
    <script src="~/Scripts/doubleClickLink.js"></script>
}
else
{
    <h2>No news</h2>
}

<div class="btn-group" role="group">
    @if (Model.Page > 0)
    {
        @Html.ActionLink("Last page", "News", "Admin", new
        {
            @page = Model.Page - 1,
            @SortType = Model.SortType,
            @Filter = Model.Filter,
            @TypeSearch = Model.TypeSearch,
            @Search = Model.Search
   }, new { @class = "btn btn-outline-dark" });
    }
    @if (Model.Page > 1 && Model.Pages > 2)
    {
        @Html.ActionLink("First page", "News", "Admin", new
        {
            @page = 0,
            @SortType = Model.SortType,
            @Filter = Model.Filter,
            @TypeSearch = Model.TypeSearch,
            @Search = Model.Search
   }, new { @class = "btn btn-outline-dark" });
    }
    @if (Model.Page < Model.Pages - 1)
    {
        @Html.ActionLink("Next page", "News", "Admin", new
        {
            @page = Model.Page + 1,
            @SortType = Model.SortType,
            @Filter = Model.Filter,
            @TypeSearch = Model.TypeSearch,
            @Search = Model.Search
   }, new { @class = "btn btn-outline-dark" });
    }
</div>