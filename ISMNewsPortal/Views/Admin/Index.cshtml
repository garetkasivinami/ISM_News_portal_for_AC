@model ISMNewsPortal.Models.NewsPostAdminCollection
@using ISMNewsPortal.Helpers

@{
    Layout = "~/Views/Shared/_Admin.cshtml";
    ViewBag.Title = Language.Language.NewsPage;
}
<h1>@Language.Language.NewsList</h1>
@Html.ActionLink(Language.Language.CreateNews, "CreateNews", "Admin", new { }, new { @class = "btn btn-outline-dark btn-createNews" })
<br />

<br />
<nav class="navbar navbar-expand-sm navbar-light bg-light">
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item dropdown drop-flex">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    @Language.Language.FilterBy...@LinkHelper.GetLocalizedByName(Model.Filter)
                </a>
                <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                    @Html.ActionLink(Language.Language.today, "Index", "Admin", LinkHelper.CreateFilterLinks(Model, "today"), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.yesterday, "Index", "Admin", LinkHelper.CreateFilterLinks(Model, "yesterday"), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.week, "Index", "Admin", LinkHelper.CreateFilterLinks(Model, "week"), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.onlyPublished, "Index", "Admin", LinkHelper.CreateFilterLinks(Model, "onlyPublished"), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.onlyNotPublished, "Index", "Admin", LinkHelper.CreateFilterLinks(Model, "NotPublished"), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.all, "Index", "Admin", LinkHelper.CreateFilterLinks(Model, null), new { @class = "dropdown-item" })
                </div>
            </li>
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    @Language.Language.SortBy...
                    @if (Model.SortType != null)
                    {
                        @LinkHelper.GetLocalizedByName(Model.SortType)
                        if (Model.Reversed == true)
                        {
                            <span> @Language.Language.DESC</span>
                        }
                        else
                        {
                            <span> @Language.Language.ASC</span>
                        }
                    }
                </a>
                <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                    @Html.ActionLink(Language.Language.id + " " + Language.Language.ASC, "Index", "Admin", LinkHelper.CreateSortLinks(Model, "id", false), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.id + " " + Language.Language.DESC, "Index", "Admin", LinkHelper.CreateSortLinks(Model, "id", true), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.name + " " + Language.Language.ASC, "Index", "Admin", LinkHelper.CreateSortLinks(Model, "name", false), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.name + " " + Language.Language.DESC, "Index", "Admin", LinkHelper.CreateSortLinks(Model, "name", true), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.Description + " " + Language.Language.ASC, "Index", "Admin", LinkHelper.CreateSortLinks(Model, "Description", false), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.Description + " " + Language.Language.DESC, "Index", "Admin", LinkHelper.CreateSortLinks(Model, "Description", true), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.date + " " + Language.Language.ASC, "Index", "Admin", LinkHelper.CreateSortLinks(Model, "date", false), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.date + " " + Language.Language.DESC, "Index", "Admin", LinkHelper.CreateSortLinks(Model, "date", true), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.editDate + " " + Language.Language.ASC, "Index", "Admin", LinkHelper.CreateSortLinks(Model, "editDate", false), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.editDate + " " + Language.Language.DESC, "Index", "Admin", LinkHelper.CreateSortLinks(Model, "editDate", true), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.Author + " " + Language.Language.ASC, "Index", "Admin", LinkHelper.CreateSortLinks(Model, "Author", false), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.Author + " " + Language.Language.DESC, "Index", "Admin", LinkHelper.CreateSortLinks(Model, "Author", true), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.PublicationDate + " " + Language.Language.ASC, "Index", "Admin", LinkHelper.CreateSortLinks(Model, "PublicationDate", false), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.PublicationDate + " " + Language.Language.DESC, "Index", "Admin", LinkHelper.CreateSortLinks(Model, "PublicationDate", true), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.Visibility + " " + Language.Language.ASC, "Index", "Admin", LinkHelper.CreateSortLinks(Model, "Visibility", false), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.Visibility + " " + Language.Language.DESC, "Index", "Admin", LinkHelper.CreateSortLinks(Model, "Visibility", true), new { @class = "dropdown-item" })
                </div>
            </li>
            @if (Model.Filter != null || Model.SortType != null)
            {
                @Html.ActionLink(Language.Language.Reset, "Index", "Admin", new { }, new { @class = "nav-link" })
            }
        </ul>
        @using (Html.BeginForm("Index", "Admin", FormMethod.Get, new { @class = "form-inline my-2 my-lg-0" }))
        {
            <input class="form-control mr-sm-2" type="search" name="Search" placeholder="@Language.Language.Search" aria-label="Search" value="@Model.Search">
            <button class="btn btn-outline-dark my-2 my-sm-0 btn-search" type="submit">@Language.Language.SearchButton</button>
        }
    </div>
</nav>

@if (Model.NewsPostAdminViews.Any())
{
    foreach (ISMNewsPortal.Models.NewsPostAdminView newsPost in Model.NewsPostAdminViews)
    {
        <div class="card news-item">
            <div class="card-header">
                <ul class="list-group list-group-horizontal">
                    <li class="list-group-item"><strong>ID: @newsPost.Id</strong></li>
                    <li class="list-group-item">
                        @if (newsPost.IsVisible)
                        {
                            <img src="/Files/?name=visible.png" height="25" class="d-inline-block align-top visibility" alt="visible" loading="lazy">
                        }
                        else
                        {
                            <img src="/Files/?name=invisible.png" height="25" class="d-inline-block align-top visibility" alt="invisible" loading="lazy">
                        }
                    </li>
                    <li class="list-group-item"><strong>@Language.Language.Author:</strong> @newsPost.AuthorName</li>
                    <li class="list-group-item"><strong>@Language.Language.CreatedDate:</strong> <span class="js_date">@newsPost.CreatedDate.ToString("u").Replace('-', '/')</span></li>


                    @if (newsPost.EditDate != null)
                    {
                        <li class="list-group-item"><strong>@Language.Language.LastEditDate:</strong>  <span class="js_date">@(newsPost.EditDate?.ToString("u").Replace('-', '/'))</span></li>
                    }
                </ul>
            </div>
            <div class="card-body">
                @if (newsPost.PublicationDate > DateTime.Now || !newsPost.IsVisible)
                {
                    <h1>@Language.Language.NotPublished</h1>
                }
                @Html.Partial("~/Views/News/_NewsSimplifyPartial.cshtml", newsPost)
            </div>
            <div class="card-footer">
                <div class="btn-group" role="group">
                    @Html.ActionLink(Language.Language.Edit, "EditNews", "Admin", new { @id = newsPost.Id }, new { @class = "btn btn-outline-dark btn-sm" })
                    @Html.ActionLink(Language.Language.Preview, "Preview", "News", new { @id = newsPost.Id }, new { @class = "btn btn-outline-dark btn-sm" })
                    @Html.ActionLink(Language.Language.ManageComments, "Comments", "Admin", new { @id = newsPost.Id }, new { @class = "btn btn-outline-dark btn-sm" })
                    @Html.ActionLink(Language.Language.Delete, "DeleteNewsPostRequest", "Admin", new { @id = newsPost.Id }, new { @class = "btn btn-outline-danger btn-sm" })
                </div>
            </div>
        </div>

    }
    <script src="~/Scripts/dateTimeUpdater.js"></script>
}
else
{
    <h2>@Language.Language.NoNews</h2>
}

<div class="btn-group" role="group">
    @if (Model.Page > 5)
    {
        @Html.ActionLink("<<", "Index", "Admin", LinkHelper.CreatePageLinks(Model, -Model.Page + 4), new { @class = "btn btn-outline-dark" });
    }

    @if (Model.Page > 1)
    {
        @Html.ActionLink("<", "Index", "Admin", LinkHelper.CreatePageLinks(Model, -1), new { @class = "btn btn-outline-dark btn-sm" }); ;
    }

    @if (Model.Pages > 1)
    {

        for (int page = ((Model.Page > 5) ? Model.Page - 5 : 1); (page < Model.Page + 5 && page <= Model.Pages); page++)
        {
            @Html.ActionLink(page.ToString(), "Index", "Admin", LinkHelper.CreatePageLinks(Model, page - Model.Page), new { @class = ((page == Model.Page) ? "btn btn-dark btn-sm" : "btn btn-outline-dark btn-sm") });
        }
    }

    @if (Model.Page < Model.Pages)
    {
        @Html.ActionLink(">", "Index", "Admin", LinkHelper.CreatePageLinks(Model, 1), new { @class = "btn btn-outline-dark btn-sm" }); ;
    }
</div>