@model ISMNewsPortal.Models.NewsPostAdminCollection

@{
    Layout = "~/Views/Shared/_Admin.cshtml";
    ViewBag.Title = Language.Language.NewsPage;
}
<h1>@Language.Language.NewsList</h1>
@Html.ActionLink(Language.Language.CreateNews, "CreateNews", "Admin", new { }, new { @class = "btn btn-outline-dark" })
<hr />

<nav class="navbar navbar-expand-sm navbar-light bg-light">
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item dropdown drop-flex">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Filter by...@Model.Filter
                </a>
                <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                    @Html.ActionLink("Today", "Index", "Admin", new
                    {
                        @Filter = "today",
                        @SortType = Model.SortType,
                        @Search = Model.Search,
                        @Reversed = Model.Reversed
                    }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Yesterday", "Index", "Admin", new
                    {
                        @Filter = "yesterday",
                        @SortType = Model.SortType,
                        @Search = Model.Search,
                        @Reversed = Model.Reversed
                    }, new { @class = "dropdown-item" })
                    @Html.ActionLink("7 Days", "Index", "Admin", new
                    {
                        @Filter = "week",
                        @SortType = Model.SortType,
                        @Search = Model.Search,
                        @Reversed = Model.Reversed
                    }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Only published", "Index", "Admin", new
                    {
                        @Filter = "only published",
                        @SortType = Model.SortType,
                        @Search = Model.Search,
                        @Reversed = Model.Reversed
                    }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Not published", "Index", "Admin", new
                    {
                        @Filter = "not published",
                        @SortType = Model.SortType,
                        @Search = Model.Search,
                        @Reversed = Model.Reversed
                    }, new { @class = "dropdown-item" })
                    @Html.ActionLink("All", "Index", "Admin", new
                    {
                        @SortType = Model.SortType,
                        @Search = Model.Search,
                        @Reversed = Model.Reversed
                    }, new { @class = "dropdown-item" })
                </div>
            </li>
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Sort by...
                    @if (Model.SortType != null)
                    {
                        @Model.SortType
                        if (Model.Reversed == true)
                        {
                            <span> DESC</span>
                        }
                        else
                        {
                            <span> ASC</span>
                        }
                    }
                </a>
                <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                    @Html.ActionLink("Id ASC", "Index", "Admin", new
                    {
                        @SortType = "id",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = false
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Id DESC", "Index", "Admin", new
                    {
                        @SortType = "id",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = true
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Name ASC", "Index", "Admin", new
                    {
                        @SortType = "name",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = false
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Name DESC", "Index", "Admin", new
                    {
                        @SortType = "name",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = true
                }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Description ASC", "Index", "Admin", new
                    {
                        @SortType = "description",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = false
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Description DESC", "Index", "Admin", new
                {
                        @SortType = "description",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = true
                }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Date ASC", "Index", "Admin", new
                    {
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = false
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Date DESC", "Index", "Admin", new
                {
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = true
                }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Edit date ASC", "Index", "Admin", new
                    {
                        @SortType = "editDate",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = false
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Edit date DESC", "Index", "Admin", new
                {
                        @SortType = "editDate",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = true
                }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Author ASC", "Index", "Admin", new
                    {
                        @SortType = "author",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = false
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Author DESC", "Index", "Admin", new
                    {
                        @SortType = "author",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = true
                }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Publication date ASC", "Index", "Admin", new
                    {
                        @SortType = "publishDate",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = false
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Publication date DESC", "Index", "Admin", new
                {
                        @SortType = "publishDate",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                       @Reversed = true
                }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Visibility ASC", "Index", "Admin", new
                    {
                        @SortType = "visibility",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = false
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Visibility DESC", "Index", "Admin", new
                    {
                        @SortType = "visibility",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = true
                }, new { @class = "dropdown-item" })
                </div>
            </li>
            @if (Model.Filter != null || Model.SortType != null)
            {
                @Html.ActionLink("Reset", "Index", "Home", new { }, new { @class = "nav-link" })
            }
        </ul>
        @using (Html.BeginForm("Index", "Admin", FormMethod.Get, new { @class = "form-inline my-2 my-lg-0" }))
        {
            <input class="form-control mr-sm-2" type="search" name="Search" placeholder="@Language.Language.Search" aria-label="Search" value="@Model.Search">
            <button class="btn btn-outline-dark my-2 my-sm-0" type="submit">@Language.Language.SearchButton</button>
        }
    </div>
</nav>

@if (Model.NewsPostAdminViews.Any())
{
    foreach (ISMNewsPortal.Models.NewsPostAdminView newsPost in Model.NewsPostAdminViews)
    {
        <div class="card news-item">
            <div class="card-header">
                <ul class="list-group list-group-horizontal">
                    <li class="list-group-item"><strong>ID: @newsPost.Id</strong></li>
                    <li class="list-group-item">@Language.Language.Author: @newsPost.AuthorName</li>
                    <li class="list-group-item">@Language.Language.CreatedDate: <span class="js_date">@newsPost.CreatedDate.ToString("u").Replace('-', '/')</span></li>
                    <li class="list-group-item">@Language.Language.PublicationDate: <span class="js_date">@newsPost.PublicationDate.ToString("u").Replace('-', '/')</span></li>
                    <li class="list-group-item">@Language.Language.Visibility: @newsPost.IsVisible</li>
                </ul>
            </div>
            <div class="card-body">
                @if (newsPost.EditDate != null)
                {
                    <p>@Language.Language.LastEditDate: @newsPost.EditDate</p>
                }
                @if (newsPost.PublicationDate > DateTime.Now || !newsPost.IsVisible)
                {
                    <h1>@Language.Language.NotPublished</h1>
                }
                @Html.Partial("~/Views/News/_NewsSimplifyPartial.cshtml", newsPost)
            </div>
            <div class="card-footer">
                <div class="btn-group" role="group">
                    @Html.ActionLink(Language.Language.Edit, "EditNews", "Admin", new { @id = newsPost.Id }, new { @class = "btn btn-outline-dark btn-sm" })
                    @Html.ActionLink(Language.Language.Preview, "Preview", "News", new { @id = newsPost.Id }, new { @class = "btn btn-outline-dark btn-sm" })
                    @Html.ActionLink(Language.Language.ManageComments, "Comments", "Admin", new { @postId = newsPost.Id }, new { @class = "btn btn-outline-dark btn-sm" })
                    @Html.ActionLink(Language.Language.Delete, "DeleteNewsPostRequest", "Admin", new { @id = newsPost.Id }, new { @class = "btn btn-outline-danger btn-sm" })
                </div>
            </div>
        </div>

    }
    <script src="~/Scripts/dateTimeUpdater.js"></script>
}
else
{
    <h2>@Language.Language.NoNews</h2>
}

<div class="btn-group" role="group">
    @if (Model.Page > 5)
    {
        @Html.ActionLink("<<", "Index", "Home", new
        {
            @SortType = Model.SortType,
            @Filter = Model.Filter,
            @Search = Model.Search,
            @Reversed = Model.Reversed
        }, new { @class = "btn btn-outline-dark" });
    }
</div>

<div class="btn-group" role="group">
    @if (Model.Page > 0)
    {
        @Html.ActionLink("<", "Index", "Admin", new
        {
            @Page = Model.Page - 1,
            @SortType = Model.SortType,
            @Filter = Model.Filter,
            @Search = Model.Search,
            @Reversed = Model.Reversed
        }, new { @class = "btn btn-outline-dark" }); ;
    }
</div>

@if (Model.Pages > 1)
{
    <div class="btn-group" role="group">
        @for (int page = ((Model.Page > 4) ? Model.Page - 5 : 0); (page < Model.Page + 5 && page < Model.Pages); page++)
        {
            @Html.ActionLink((page + 1).ToString(), "Index", "Admin", new
            {
                @page = page,
                @SortType = Model.SortType,
                @Filter = Model.Filter,
                @Search = Model.Search,
                @Reversed = Model.Reversed
            }, new { @class = ((page == Model.Page) ? "btn btn-dark btn-sm" : "btn btn-primary btn-sm") });
        }
    </div>
}

<div class="btn-group" role="group">
    @if (Model.Page < Model.Pages - 1)
    {
        @Html.ActionLink(">", "Index", "Admin", new
        {
            @Page = Model.Page + 1,
            @SortType = Model.SortType,
            @Filter = Model.Filter,
            @Search = Model.Search,
            @Reversed = Model.Reversed
        }, new { @class = "btn btn-outline-dark" }); ;
    }
</div>