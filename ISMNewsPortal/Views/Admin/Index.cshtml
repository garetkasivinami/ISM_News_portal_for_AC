@model ISMNewsPortal.Models.NewsPostAdminCollection

@{
    Layout = "~/Views/Shared/_Admin.cshtml";
    string selected = "selected";
    ViewBag.Title = "News page";
}
<h1>News list</h1>
@Html.ActionLink("Create news", "CreateNews", "Admin", new { }, new { @class = "btn btn-outline-dark" })
<hr />

<nav class="navbar navbar-expand-sm navbar-light bg-light">
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item dropdown drop-flex">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Filter by...@Model.Filter
                </a>
                <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                    @Html.ActionLink("Today", "News", "Admin", new
                    {
                        @Filter = "today",
                        @SortType = Model.SortType,
                        @Search = Model.Search,
                        @Reversed = Model.Reversed
                    }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Yesterday", "News", "Admin", new
                    {
                        @Filter = "yesterday",
                        @SortType = Model.SortType,
                        @Search = Model.Search,
                        @Reversed = Model.Reversed
                    }, new { @class = "dropdown-item" })
                    @Html.ActionLink("This week", "News", "Admin", new
                    {
                        @Filter = "week",
                        @SortType = Model.SortType,
                        @Search = Model.Search,
                        @Reversed = Model.Reversed
                    }, new { @class = "dropdown-item" })
                    @Html.ActionLink("All", "News", "Admin", new
                    {
                        @SortType = Model.SortType,
                        @Search = Model.Search,
                        @Reversed = Model.Reversed
                    }, new { @class = "dropdown-item" })
                </div>
            </li>
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Sort by...@Model.SortType
                </a>
                <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                    @Html.ActionLink("Id ASC", "News", "Admin", new
                    {
                        @SortType = "id",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = false
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Id DESC", "News", "Admin", new
                    {
                        @SortType = "id",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = true
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Name ASC", "News", "Admin", new
                    {
                        @SortType = "name",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = false
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Name DESC", "News", "Admin", new
                    {
                        @SortType = "name",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = true
                }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Description ASC", "News", "Admin", new
                    {
                        @SortType = "description",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = false
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Description DESC", "News", "Admin", new
                {
                        @SortType = "description",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = true
                }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Date ASC", "News", "Admin", new
                    {
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = false
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Date DESC", "News", "Admin", new
                {
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = true
                }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Edit date ASC", "News", "Admin", new
                    {
                        @SortType = "editDate",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = false
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Edit date DESC", "News", "Admin", new
                {
                        @SortType = "editDate",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = true
                }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Author ASC", "News", "Admin", new
                    {
                        @SortType = "author",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = false
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Author DESC", "News", "Admin", new
                    {
                        @SortType = "author",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = true
                }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Publication date ASC", "News", "Admin", new
                    {
                        @SortType = "publishDate",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = false
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Publication date DESC", "News", "Admin", new
                {
                        @SortType = "publishDate",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                       @Reversed = true
                }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Visibility ASC", "News", "Admin", new
                    {
                        @SortType = "visibility",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = false
               }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Visibility DESC", "News", "Admin", new
                    {
                        @SortType = "visibility",
                        @Filter = Model.Filter,
                        @Search = Model.Search,
                        @Reversed = true
                }, new { @class = "dropdown-item" })
                </div>
            </li>

        </ul>
        @using (Html.BeginForm("News", "Admin", FormMethod.Get, new { @class = "form-inline my-2 my-lg-0" }))
        {
            <input class="form-control mr-sm-2" type="search" name="Search" placeholder="Search" aria-label="Search" value="@Model.Search">
            <button class="btn btn-outline-dark my-2 my-sm-0" type="submit">Search</button>
        }
    </div>
</nav>

@if (Model.NewsPostAdminViews.Any())
{
    foreach (ISMNewsPortal.Models.NewsPostAdminView newsPost in Model.NewsPostAdminViews)
    {
        <div class="card news-item">
            <div class="card-header">
                <ul class="list-group list-group-horizontal">
                    <li class="list-group-item"><strong>ID: @newsPost.Id</strong></li>
                    <li class="list-group-item">Author: @newsPost.AuthorName</li>
                    <li class="list-group-item">Author id: @newsPost.AuthorId</li>
                    <li class="list-group-item js_date">Create date: @newsPost.CreatedDate.ToString("u").Replace('-', '/')</li>
                    <li class="list-group-item js_date">Publication date: @newsPost.PublicationDate.ToString("u").Replace('-', '/')</li>
                    <li class="list-group-item">Is visible: @newsPost.IsVisible</li>
                </ul>
            </div>
            <div class="card-body">
                @if (newsPost.EditDate != null)
                {
                    <p>Last edit date: @newsPost.EditDate</p>
                }
                @if (newsPost.PublicationDate > DateTime.Now)
                {
                    <h1>Not published!</h1>
                }
                @Html.Partial("~/Views/News/_NewsSimplifyPartial.cshtml", newsPost)
            </div>
            <div class="card-footer">
                <div class="btn-group" role="group">
                    @Html.ActionLink("Edit", "EditNews", "Admin", new { @id = newsPost.Id }, new { @class = "btn btn-outline-dark btn-sm" })
                    @Html.ActionLink("Preview", "Preview", "News", new { @id = newsPost.Id }, new { @class = "btn btn-outline-dark btn-sm" })
                    @Html.ActionLink("Manage comments", "Comments", "Admin", new { @postId = newsPost.Id }, new { @class = "btn btn-outline-dark btn-sm" })
                    @Html.ActionLink("Delete", "DeleteNewsPostRequest", "Admin", new { @id = newsPost.Id }, new { @class = "btn btn-outline-danger btn-sm" })
                </div>
            </div>
        </div>

    }
<script src="~/Scripts/dateTimeUpdater.js"></script>
}
else
{
    <h2>No news</h2>
}

<div class="btn-group" role="group">
    @for (int page = ((Model.Page > 4) ? Model.Page - 5 : 0); (page < Model.Page + 5 && page < Model.Pages); page++)
    {
        @Html.ActionLink((page + 1).ToString(), "Index", "Admin", new
        {
            @page = page,
            @SortType = Model.SortType,
            @Filter = Model.Filter,
            @Search = Model.Search,
            @Reversed = Model.Reversed
        }, new { @class = ((page == Model.Page) ? "btn btn-dark btn-sm" : "btn btn-primary btn-sm") });
    }
</div>

<div class="btn-group" role="group">
    @if (Model.Page > 5)
    {
        @Html.ActionLink("First page", "Index", "Admin", new
        {
            @SortType = Model.SortType,
            @Filter = Model.Filter,
            @Search = Model.Search,
            @Reversed = Model.Reversed
        }, new { @class = "btn btn-outline-dark" });
    }
</div>