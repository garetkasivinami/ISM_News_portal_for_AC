@model ISMNewsPortal.Models.AdminEditModel

@{
    Layout = "~/Views/Shared/_Admin.cshtml";
    string chekedText = "selected";
    string disabled = "disabled";
    ViewBag.Title = Language.Language.EditAdmin;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3>@Language.Language.EditAdmin</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <h4>@Language.Language.Login: @Model.Login</h4>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-10">
                <label for="inputState">@Language.Language.Roles</label>
                <select id="inputState" class="form-control" multiple name="Roles"
                        @if (!User.IsInRole(ISMNewsPortal.Models.Roles.CanSetAdminRole.ToString())) { @disabled  }>
                    @foreach (@ISMNewsPortal.Models.Roles role in Enum.GetValues(typeof(ISMNewsPortal.Models.Roles)))
                    {
                        <option value="@role"
                                @if (Model.Roles.Contains(role.ToString())) { @chekedText  }>
                            @role
                        </option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@Language.Language.Edit" class="btn btn-outline-success" />
                @Html.ActionLink(Language.Language.Return, "AdminsList", null, new { @class = "btn btn-outline-primary" })
            </div>
        </div>
    </div>
}

