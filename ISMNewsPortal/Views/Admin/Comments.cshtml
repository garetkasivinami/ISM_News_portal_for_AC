@model ISMNewsPortal.Models.CommentViewModelCollection

@{
    Layout = "~/Views/Shared/_Admin.cshtml";
    ViewBag.Title = Language.Language.Comments;
}

<img src="@Model.ImagePath" class="post-img" alt="Post image">
<div class="card">
    <div class="card-body">
        <h5 class="card-title">@Model.NewsPost.Name</h5>
    </div>
</div>
<h1>@Language.Language.CommentsList</h1>
<p>@Language.Language.CommentsCount: @Model.CommentsCount</p>
<p>@Language.Language.Pages: @Model.Pages</p>
<div class="btn-group" role="group">
    @if (Model.Page > 5)
    {
        @Html.ActionLink("<<", "Index", "Home", new
        {
            @postId = Model.NewsPost.Id
        }, new { @class = "btn btn-outline-dark btn-sm" });
    }
</div>

<div class="btn-group" role="group">
    @if (Model.Page > 0)
    {
        @Html.ActionLink("<", "Comments", "Admin", new
        {
            @Page = Model.Page - 1,
            @postId = Model.NewsPost.Id
        }, new { @class = "btn btn-outline-dark btn-sm" }); ;
    }
</div>

<div class="btn-group" role="group">
    @for (int page = ((Model.Page > 4) ? Model.Page - 5 : 0); (page < Model.Page + 5 && page < Model.Pages); page++)
    {
        @Html.ActionLink((page + 1).ToString(), "Comments", "Admin", new
        {
            @page = page,
            @postId = Model.NewsPost.Id
        }, new { @class = ((page == Model.Page) ? "btn btn-dark btn-sm" : "btn btn-primary btn-sm") });
    }
</div>

<div class="btn-group" role="group">
    @if (Model.Page < Model.Pages - 1)
    {
        @Html.ActionLink(">", "Comments", "Admin", new
        {
            @Page = Model.Page + 1,
            @postId = Model.NewsPost.Id
        }, new { @class = "btn btn-outline-dark btn-sm" }); ;
    }
</div>

<nav class="navbar navbar-expand-sm navbar-light bg-light">
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item dropdown drop-flex">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Filter by...@Model.Filter
                </a>
                <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                    @Html.ActionLink("Today", "Comments", "Admin", new
                    {
                        @Filter = "today",
                        @SortType = Model.SortType,
                        @Search = Model.Search,
                        @Reversed = Model.Reversed
                    }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Yesterday", "Comments", "Admin", new
                    {
                        @Filter = "yesterday",
                        @SortType = Model.SortType,
                        @Search = Model.Search,
                        @Reversed = Model.Reversed
                    }, new { @class = "dropdown-item" })
                    @Html.ActionLink("This week", "Comments", "Admin", new
                    {
                        @Filter = "week",
                        @SortType = Model.SortType,
                        @Search = Model.Search,
                        @Reversed = Model.Reversed
                    }, new { @class = "dropdown-item" })
                    @Html.ActionLink("All", "Comments", "Admin", new
                    {
                        @SortType = Model.SortType,
                        @Search = Model.Search,
                        @Reversed = Model.Reversed
                    }, new { @class = "dropdown-item" })
                </div>
            </li>
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Sort by...@Model.SortType
                </a>
                <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                    @Html.ActionLink("Username", "Comments", "Admin", new
                    {
                        @SortType = "username",
                        @Filter = Model.Filter,
                        @Search = Model.Search
                    }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Commentary text", "Comments", "Admin", new
                    {
                        @SortType = "text",
                        @Filter = Model.Filter,
                        @Search = Model.Search
                    }, new { @class = "dropdown-item" })
                    @Html.ActionLink("News post", "Comments", "Admin", new
                    {
                        @SortType = "news post",
                        @Filter = Model.Filter,
                        @Search = Model.Search
                    }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Id", "Comments", "Admin", new
                    {
                        @SortType = "id",
                        @filter = Model.@Filter,
                        @Search = Model.Search
                    }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Date", "Comments", "Admin", new
                    {
                        @Filter = Model.Filter,
                        @Search = Model.Search
                    }, new { @class = "dropdown-item" })
                </div>
            </li>
            @Html.ActionLink("Reverse", "Comments", "Admin", new { @sortType = Model.SortType, @page = Model.Page, @filter = Model.Filter, @Reversed = !(Model.Reversed ?? false), @Search = Model.Search }, new { @class = "nav-link" })
        </ul>
        @using (Html.BeginForm("Comments", "Admin", FormMethod.Get, new { @class = "form-inline my-2 my-lg-0" }))
        {
            @Html.Hidden("sortType", Model.SortType);
            @Html.Hidden("filter", Model.Filter);
            <p class="nav-link" style="margin:0">Search by....</p>

            <input class="form-control mr-sm-2" type="search" name="Search" placeholder="Search" aria-label="Search" value="@Model.Search">
            <button class="btn btn-outline-dark my-2 my-sm-0" type="submit">Search</button>
        }
    </div>
</nav>

@if (Model.CommentViewModels.Any())
{
    foreach (ISMNewsPortal.Models.CommentViewModel comment in Model.CommentViewModels)
    {
        <div class="card">
            <div class="card-header">
                @comment.Author
            </div>
            <div class="card-body">
                <p class="card-text">
                    @comment.Text
                </p>
                <p class="card-text">
                    <small class="text-muted js_date">
                        @comment.Date.ToString("u").Replace('-', '/')
                    </small>
                </p>
            </div>
            <div class="card-footer">
                <div class="btn-group" role="group">
                    <button class = "btn btn-outline-secondary btn-sm" onclick="DeleteComment(@comment.Id)">@Language.Language.Delete</button>
                    @Html.ActionLink(Language.Language.GoToPost, "Details", "News", new { @id = comment.NewsPostId }, new { @class = "btn btn-outline-secondary btn-sm", @target = "_blank" })
                </div>
            </div>
        </div>
    }
    <script src="~/Scripts/dateTimeUpdater.js"></script>
}
else
{
    <p>@Language.Language.NoComments</p>
}
<script src="~/Scripts/doubleClickLink.js"></script>
<script>
    function DeleteComment(id) {
        let result = confirm('@Language.Language.SureQ');
        if (result == true) {
            let url = '@Url.Action("DeleteComment", "Admin", new { @id = "targetId", @postId = Model.NewsPost.Id })';
            window.open(url.replace("targetId", id), "_self");
        }
    }
</script>