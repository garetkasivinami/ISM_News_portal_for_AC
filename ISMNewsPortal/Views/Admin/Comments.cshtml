@model ISMNewsPortal.Models.CommentViewModelCollection

@{
    Layout = "~/Views/Shared/_Admin.cshtml";
    string selected = "selected";
    ViewBag.Title = "Comments";
}
<!--Стилізувати-->
<!--ГОТОВО-->
<h1>Comments list</h1>
<p>Comments count: @Model.CommentsCount</p>
<p>Pages: @Model.Pages</p>
@using (Html.BeginForm("Comments", "Admin", FormMethod.Get, new { }))
{
    <div class="form-row align-items-center">
        <div class="col-auto">
            <label for="inlineFormInput">Move to page</label>
        </div>
        <div class="col-auto">
            <input type="number" class="form-control mb-2" id="page" name="page" min="0" max="@(Model.Pages - 1)" value="@Model.Page" />
        </div>
        <div class="col-auto">
            <button type="submit" class="btn btn-dark mb-2">Move!</button>
        </div>
    </div>
}

<nav class="navbar navbar-expand-sm navbar-light bg-light">
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item dropdown drop-flex">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Filter by...@Model.Filter
                </a>
                <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                    @Html.ActionLink("Today", "Comments", "Admin", new
                    {
                        @Filter = "today",
                        @SortType = Model.SortType,
                        @TypeSearch = Model.TypeSearch,
                        @Search = Model.Search,
                        @Reversed = Model.Reversed
                    }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Yesterday", "Comments", "Admin", new
                    {
                        @Filter = "yesterday",
                        @SortType = Model.SortType,
                        @TypeSearch = Model.TypeSearch,
                        @Search = Model.Search,
                        @Reversed = Model.Reversed
                    }, new { @class = "dropdown-item" })
                    @Html.ActionLink("This week", "Comments", "Admin", new
                    {
                        @Filter = "week",
                        @SortType = Model.SortType,
                        @TypeSearch = Model.TypeSearch,
                        @Search = Model.Search,
                        @Reversed = Model.Reversed
                    }, new { @class = "dropdown-item" })
                    @Html.ActionLink("All", "Comments", "Admin", new
                    {
                        @SortType = Model.SortType,
                        @TypeSearch = Model.TypeSearch,
                        @Search = Model.Search,
                        @Reversed = Model.Reversed
                    }, new { @class = "dropdown-item" })
                </div>
            </li>
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Sort by...@Model.SortType
                </a>
                <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                    @Html.ActionLink("Username", "Comments", "Admin", new
                    {
                        @SortType = "username",
                        @Filter = Model.Filter,
                        @TypeSearch = Model.TypeSearch,
                        @Search = Model.Search
                    }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Commentary text", "Comments", "Admin", new
                    {
                        @SortType = "text",
                        @Filter = Model.Filter,
                        @TypeSearch = Model.TypeSearch,
                        @Search = Model.Search
                    }, new { @class = "dropdown-item" })
                    @Html.ActionLink("News post", "Comments", "Admin", new
                    {
                        @SortType = "news post",
                        @Filter = Model.Filter,
                        @TypeSearch = Model.TypeSearch,
                        @Search = Model.Search
                    }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Id", "Comments", "Admin", new
                    {
                        @SortType = "id",
                        @filter = Model.@Filter,
                        @TypeSearch = Model.TypeSearch,
                        @Search = Model.Search
                    }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Date", "Comments", "Admin", new
                    {
                        @Filter = Model.Filter,
                        @TypeSearch = Model.TypeSearch,
                        @Search = Model.Search
                    }, new { @class = "dropdown-item" })
                </div>
            </li>
            @Html.ActionLink("Reverse", "Comments", "Admin", new { @sortType = Model.SortType, @page = Model.Page, @filter = Model.Filter, @Reversed = !(Model.Reversed ?? false), @TypeSearch = Model.TypeSearch, @Search = Model.Search }, new { @class = "nav-link" })
        </ul>
        @using (Html.BeginForm("Comments", "Admin", FormMethod.Get, new { @class = "form-inline my-2 my-lg-0" }))
        {
            @Html.Hidden("sortType", Model.SortType);
            @Html.Hidden("filter", Model.Filter);
            <p class="nav-link" style="margin:0">Search by....</p>
            <select name="TypeSearch" class="form-control">
                <option value="name">Name</option>
                <option value="text" @if (Model.TypeSearch == "text") { @selected  }>
                    Text
                </option>
            </select>

            <input class="form-control mr-sm-2" type="search" name="Search" placeholder="Search" aria-label="Search" value="@Model.Search">
            <button class="btn btn-outline-dark my-2 my-sm-0" type="submit">Search</button>
        }
    </div>
</nav>

@if (Model.CommentViewModels.Any())
{
    foreach (ISMNewsPortal.Models.CommentViewModel comment in Model.CommentViewModels)
    {
        <div class="card">
            <div class="card-header">
                @comment.Author
            </div>
            <div class="card-body">
                <p class="card-text">
                    @comment.Text
                </p>
                <p class="card-text">
                    <small class="text-muted">
                        @comment.Date
                    </small>
                </p>
            </div>
            <div class="card-footer">
                <div class="btn-group" role="group">
                    @Html.ActionLink("Delete", "DeleteComment", "Admin", new { @id = comment.Id }, new { @class = "btn btn-outline-secondary btn-sm doubleClickLink" })
                    @Html.ActionLink("Go to post", "Details", "News", new { @id = comment.NewsPostId }, new { @class = "btn btn-outline-secondary btn-sm", @target = "_blank" })
                </div>
            </div>
        </div>
    }
}
else
{
    <p>No comments</p>
}
<script src="~/Scripts/doubleClickLink.js"></script>

<div class="btn-group" role="group">
    @if (Model.Page > 0)
    {
        @Html.ActionLink("Last page", "Comments", "Admin", new
        {
            @Page = Model.Page - 1,
            @SortType = Model.SortType,
            @Filter = Model.Filter,
            @TypeSearch = Model.TypeSearch,
            @Search = Model.Search,
            @Reversed = Model.Reversed
        }, new { @class = "btn btn-outline-dark" });
    }
    @if (Model.Page > 1 && Model.Pages > 2)
    {
        @Html.ActionLink("First page", "Comments", "Admin", new
        {
            @Page = 0,
            @SortType = Model.SortType,
            @Filter = Model.Filter,
            @TypeSearch = Model.TypeSearch,
            @Search = Model.Search,
            @Reversed = Model.Reversed
        }, new { @class = "btn btn-outline-dark" });
    }
    @if (Model.Page < Model.Pages - 1)
    {
        @Html.ActionLink("Next page", "Comments", "Admin", new
        {
            @Page = Model.Page + 1,
            @SortType = Model.SortType,
            @Filter = Model.Filter,
            @TypeSearch = Model.TypeSearch,
            @Search = Model.Search,
            @Reversed = Model.Reversed
        }, new { @class = "btn btn-outline-dark" });
    }
</div>

