@model ISMNewsPortal.Models.CommentViewModelCollection
@using ISMNewsPortal.Helpers;

@{
    Layout = "~/Views/Shared/_Admin.cshtml";
    ViewBag.Title = Language.Language.Comments;
}

<img src="@Model.ImagePath" class="post-img" alt=@Language.Language.NoImage>
<div class="card">
    <div class="card-body">
        <h5 class="card-title">@Model.NewsPost.Name</h5>
    </div>
</div>
<h1>@Language.Language.CommentsList</h1>
<p>@Language.Language.CommentsCount: @Model.CommentsCount</p>
<p>@Language.Language.Pages: @Model.Pages</p>

<div class="btn-group" role="group">
    @if (Model.Page > 5)
    {
        @Html.ActionLink("<<", "Comments", "Admin", LinkHelper.CreatePageLinks(Model, -Model.Page + 4), new { @class = "btn btn-outline-dark" });
    }

    @if (Model.Page > 1)
    {
        @Html.ActionLink("<", "Comments", "Admin", LinkHelper.CreatePageLinks(Model, -1), new { @class = "btn btn-outline-dark btn-sm" }); ;
    }

    @if (Model.Pages > 1)
    {

        for (int page = ((Model.Page > 5) ? Model.Page - 5 : 1); (page < Model.Page + 5 && page <= Model.Pages); page++)
        {
            @Html.ActionLink(page.ToString(), "Comments", "Admin", LinkHelper.CreatePageLinks(Model, page - Model.Page), new { @class = ((page == Model.Page) ? "btn btn-dark btn-sm" : "btn btn-outline-dark btn-sm") });
        }
    }

    @if (Model.Page < Model.Pages)
    {
        @Html.ActionLink(">", "Comments", "Admin", LinkHelper.CreatePageLinks(Model, 1), new { @class = "btn btn-outline-dark btn-sm" }); ;
    }
</div>
<nav class="navbar navbar-expand-sm navbar-light bg-light">
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item dropdown drop-flex">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    @Language.Language.FilterBy... @Model.Filter
                </a>
                <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                    @Html.ActionLink(Language.Language.today, "Comments", "Admin", LinkHelper.CreateCommentFilterLinks(Model, "today"), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.yesterday, "Comments", "Admin", LinkHelper.CreateCommentFilterLinks(Model, "yesterday"), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.week, "Comments", "Admin", LinkHelper.CreateCommentFilterLinks(Model, "week"), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.all, "Comments", "Admin", LinkHelper.CreateCommentFilterLinks(Model, null), new { @class = "dropdown-item" })
                </div>
            </li>
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    @Language.Language.SortBy... @Model.SortType
                </a>
                <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                    @Html.ActionLink(Language.Language.Username + " " + Language.Language.ASC, "Comments", "Admin", LinkHelper.CreateCommentSortLinks(Model, "username", false), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.Username + " " + Language.Language.DESC, "Comments", "Admin", LinkHelper.CreateCommentSortLinks(Model, "username", true), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.CommentText + " " + Language.Language.ASC, "Comments", "Admin", LinkHelper.CreateCommentSortLinks(Model, "text", false), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.CommentText + " " + Language.Language.DESC, "Comments", "Admin", LinkHelper.CreateCommentSortLinks(Model, "text", true), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.date + " " + Language.Language.ASC, "Comments", "Admin", LinkHelper.CreateCommentSortLinks(Model, "Date", false), new { @class = "dropdown-item" })
                    @Html.ActionLink(Language.Language.date + " " + Language.Language.DESC, "Comments", "Admin", LinkHelper.CreateCommentSortLinks(Model, "Date", true), new { @class = "dropdown-item" })
                </div>
            </li>
            @if (Model.Filter != null || Model.SortType != null)
            {
                @Html.ActionLink(Language.Language.Reset, "Index", "Admin", new { }, new { @class = "nav-link" })
            }
        </ul>
        @using (Html.BeginForm("Comments", "Admin", FormMethod.Get, new { @class = "form-inline my-2 my-lg-0" }))
        {
            @Html.Hidden("sortType", Model.SortType);
            @Html.Hidden("filter", Model.Filter);
            <p class="nav-link" style="margin:0">@Language.Language.Search</p>

            <input class="form-control mr-sm-2" type="search" name="Search" placeholder=@Language.Language.Search aria-label="Search" value="@Model.Search">
            <button class="btn btn-outline-dark my-2 my-sm-0" type="submit">@Language.Language.SearchButton</button>
        }
    </div>
</nav>

@if (Model.CommentViewModels.Any())
{
    foreach (ISMNewsPortal.Models.CommentViewModel comment in Model.CommentViewModels)
    {
        <div class="card">
            <div class="card-header">
                @comment.Author
            </div>
            <div class="card-body">
                <p class="card-text">
                    @comment.Text
                </p>
                <p class="card-text">
                    <small class="text-muted js_date">
                        @comment.Date.ToString("u").Replace('-', '/')
                    </small>
                </p>
            </div>
            <div class="card-footer">
                <div class="btn-group" role="group">
                    <button class="btn btn-outline-secondary btn-sm" onclick="DeleteComment(@comment.Id)">@Language.Language.Delete</button>
                    @Html.ActionLink(Language.Language.GoToPost, "Details", "News", new { @id = comment.NewsPostId }, new { @class = "btn btn-outline-secondary btn-sm", @target = "_blank" })
                </div>
            </div>
        </div>
    }
    <script src="~/Scripts/dateTimeUpdater.js"></script>
}
else
{
    <p>@Language.Language.NoComments</p>
}
<script src="~/Scripts/doubleClickLink.js"></script>
<script>
    function DeleteComment(id) {
        let result = confirm('@Language.Language.SureQ');
        if (result == true) {
            let url = '@Url.Action("DeleteComment", "Admin", new { @id = "targetId", @postId = Model.NewsPost.Id })';
            window.open(url.replace("targetId", id), "_self");
        }
    }
</script>
