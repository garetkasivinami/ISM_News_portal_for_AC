@model ISMNewsPortal.Models.NewsPostSimplifiedCollection
@using ISMNewsPortal.Helpers

@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h1>ACME COSMETICS</h1>
</div>

<div class="wrapper">

    <nav class="navbar navbar-expand-sm navbar-light bg-light">
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav mr-auto sortfilter">
                <li class="nav-item dropdown drop-flex">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        @Language.Language.FilterBy...@LinkHelper.GetLocalizedByName(Model.Filter)
                    </a>
                    <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                        @Html.ActionLink(Language.Language.today, "Index", "News", LinkHelper.CreateFilterLinks(Model, "today"), new { @class = "dropdown-item" })
                        @Html.ActionLink(Language.Language.yesterday, "Index", "News", LinkHelper.CreateFilterLinks(Model, "yesterday"), new { @class = "dropdown-item" })
                        @Html.ActionLink(Language.Language.week, "Index", "News", LinkHelper.CreateFilterLinks(Model, "week"), new { @class = "dropdown-item" })
                        @Html.ActionLink(Language.Language.all, "Index", "News", LinkHelper.CreateFilterLinks(Model, null), new { @class = "dropdown-item" })
                    </div>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        @Language.Language.SortBy...
                        @if (Model.SortType != null)
                        {
                            @LinkHelper.GetLocalizedByName(Model.SortType)
                            if (Model.Reversed == true)
                            {
                                <span> @Language.Language.DESC</span>
                            }
                            else
                            {
                                <span> @Language.Language.ASC</span>
                            }
                        }
                    </a>
                    <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                        @Html.ActionLink(Language.Language.name + " " + Language.Language.ASC, "Index", "News", LinkHelper.CreateSortLinks(Model, "name", false), new { @class = "dropdown-item" })
                        @Html.ActionLink(Language.Language.name + " " + Language.Language.DESC, "Index", "News", LinkHelper.CreateSortLinks(Model, "name", true), new { @class = "dropdown-item" })
                        @Html.ActionLink(Language.Language.Description + " " + Language.Language.ASC, "Index", "News", LinkHelper.CreateSortLinks(Model, "Description", false), new { @class = "dropdown-item" })
                        @Html.ActionLink(Language.Language.Description + " " + Language.Language.DESC, "Index", "News", LinkHelper.CreateSortLinks(Model, "Description", true), new { @class = "dropdown-item" })
                        @Html.ActionLink(Language.Language.date + " " + Language.Language.ASC, "Index", "News", LinkHelper.CreateSortLinks(Model, "date", false), new { @class = "dropdown-item", @Reversed = false })
                        @Html.ActionLink(Language.Language.date + " " + Language.Language.DESC, "Index", "News", LinkHelper.CreateSortLinks(Model, "date", true), new { @class = "dropdown-item", @Reversed = true })
                    </div>
                </li>
                @if (Model.Filter != null || Model.SortType != null)
                {
                    @Html.ActionLink(Language.Language.Reset, "Index", "News", new { }, new { @class = "nav-link" })
                }
            </ul>
            @using (Html.BeginForm("Index", "News", FormMethod.Get, new { @class = "form-inline my-2 my-lg-0" }))
            {
                <input class="form-control mr-sm-2" type="search" name="search" placeholder="@Language.Language.Search" aria-label="Search" value="@Model.Search">
                <button class="btn btn-outline-dark my-2 my-sm-0" type="submit">@Language.Language.SearchButton</button>
            }
        </div>
    </nav>

    @if (Model.NewsPostSimpliedViews.Any())
    {
        foreach (ISMNewsPortal.Models.NewsPostSimplifiedView newsPost in Model.NewsPostSimpliedViews)
        {
            <div class="card news-item">
                @Html.Partial("~/Views/News/_NewsSimplifyPartial.cshtml", newsPost)
            </div>
        }
        <script src="~/Scripts/dateTimeUpdater.js"></script>
    }
    else
    {
        <h2>@Language.Language.NoNews</h2>
    }

    <div class="btn-group" role="group">
        @if (Model.Page > 5)
        {
            @Html.ActionLink("<<", "Index", "News", LinkHelper.CreatePageLinks(Model, -Model.Page), new { @class = "btn btn-outline-dark" });
        }
    </div>

    <div class="btn-group" role="group">
        @if (Model.Page > 0)
        {
            @Html.ActionLink("<", "Index", "News", LinkHelper.CreatePageLinks(Model, -1), new { @class = "btn btn-outline-dark btn-sm" }); ;
        }
    </div>

    @if (Model.Pages > 1)
    {
        <div class="btn-group" role="group">
            @for (int page = ((Model.Page > 4) ? Model.Page - 5 : 0); (page < Model.Page + 5 && page < Model.Pages); page++)
            {
                @Html.ActionLink((page + 1).ToString(), "Index", "News", LinkHelper.CreatePageLinks(Model, page - Model.Page), new { @class = ((page == Model.Page) ? "btn btn-dark btn-sm" : "btn btn-primary btn-sm") });
            }
        </div>
    }

    <div class="btn-group" role="group">
        @if (Model.Page < Model.Pages - 1)
        {
            @Html.ActionLink(">", "Index", "News", LinkHelper.CreatePageLinks(Model, 1), new { @class = "btn btn-outline-dark btn-sm" }); ;
        }
    </div>
</div>